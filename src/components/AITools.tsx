import React, { useState } from 'react';
import { Brain, Sparkles, MessageSquare, TrendingUp, Users, FileText, Wand2, Target } from 'lucide-react';
import { Card, CardContent, CardHeader, CardTitle } from './ui/card';
import { Button } from './ui/button';
import { Badge } from './ui/badge';
import { Textarea } from './ui/textarea';
import { Select, SelectContent, SelectItem, SelectTrigger, SelectValue } from './ui/select';
import { Progress } from './ui/progress';
import { Tabs, TabsContent, TabsList, TabsTrigger } from './ui/tabs';

interface RetentionInsight {
  id: string;
  clientName: string;
  riskLevel: 'high' | 'medium' | 'low';
  lastVisit: string;
  recommendation: string;
  probability: number;
}

interface ContentSuggestion {
  id: string;
  type: 'social' | 'email' | 'sms' | 'promotion';
  title: string;
  content: string;
  engagement: number;
  target: string;
}

const retentionInsights: RetentionInsight[] = [
  {
    id: '1',
    clientName: '–ê–Ω–Ω–∞ –°–º–∏—Ä–Ω–æ–≤–∞',
    riskLevel: 'high',
    lastVisit: '2024-05-15',
    recommendation: '–ü—Ä–µ–¥–ª–æ–∂–∏—Ç–µ –ø–µ—Ä—Å–æ–Ω–∞–ª—å–Ω—É—é —Å–∫–∏–¥–∫—É 15% –Ω–∞ —Å–ª–µ–¥—É—é—â–∏–π –≤–∏–∑–∏—Ç. –ö–ª–∏–µ–Ω—Ç –ø—Ä–µ–¥–ø–æ—á–∏—Ç–∞–µ—Ç –≤–µ—á–µ—Ä–Ω–µ–µ –≤—Ä–µ–º—è.',
    probability: 85
  },
  {
    id: '2',
    clientName: '–ú–∞—Ä–∏—è –ö–æ–∑–ª–æ–≤–∞',
    riskLevel: 'medium',
    lastVisit: '2024-06-20',
    recommendation: '–û—Ç–ø—Ä–∞–≤—å—Ç–µ –Ω–∞–ø–æ–º–∏–Ω–∞–Ω–∏–µ –æ –Ω–æ–≤—ã—Ö —Ç—Ä–µ–Ω–¥–∞—Ö –≤ –æ–∫—Ä–∞—à–∏–≤–∞–Ω–∏–∏. –ö–ª–∏–µ–Ω—Ç –∏–Ω—Ç–µ—Ä–µ—Å—É–µ—Ç—Å—è –º–æ–¥–Ω—ã–º–∏ —Ç–µ—Ö–Ω–∏–∫–∞–º–∏.',
    probability: 65
  },
  {
    id: '3',
    clientName: '–ï–ª–µ–Ω–∞ –í–æ–ª–∫–æ–≤–∞',
    riskLevel: 'low',
    lastVisit: '2024-07-01',
    recommendation: '–†–µ–≥—É–ª—è—Ä–Ω—ã–π –∫–ª–∏–µ–Ω—Ç. –ü—Ä–µ–¥–ª–æ–∂–∏—Ç–µ –ø—Ä–æ–≥—Ä–∞–º–º—É –ª–æ—è–ª—å–Ω–æ—Å—Ç–∏ –∏–ª–∏ —Ä–µ—Ñ–µ—Ä–∞–ª—å–Ω—É—é –ø—Ä–æ–≥—Ä–∞–º–º—É.',
    probability: 25
  }
];

const contentSuggestions: ContentSuggestion[] = [
  {
    id: '1',
    type: 'social',
    title: 'Instagram –ø–æ—Å—Ç - –õ–µ—Ç–Ω–∏–µ —Ç—Ä–µ–Ω–¥—ã',
    content: 'üåû –õ–µ—Ç–Ω–∏–µ —Ç—Ä–µ–Ω–¥—ã –≤ –º–∞–Ω–∏–∫—é—Ä–µ 2024! ‚ú®\n\n–Ø—Ä–∫–∏–µ –Ω–µ–æ–Ω–æ–≤—ã–µ –æ—Ç—Ç–µ–Ω–∫–∏, –º–∏–Ω–∏–º–∞–ª–∏—Å—Ç–∏—á–Ω—ã–π –¥–∏–∑–∞–π–Ω –∏ –Ω–∞—Ç—É—Ä–∞–ª—å–Ω—ã–µ —Ç–µ–∫—Å—Ç—É—Ä—ã - –≤—Å–µ —ç—Ç–æ –∂–¥–µ—Ç –≤–∞—Å –≤ –Ω–∞—à–µ–º —Å–∞–ª–æ–Ω–µ!\n\nüìû –ó–∞–ø–∏—Å—ã–≤–∞–π—Ç–µ—Å—å –ø—Ä—è–º–æ —Å–µ–π—á–∞—Å\n#–º–∞–Ω–∏–∫—é—Ä #–ª–µ—Ç–Ω–∏–π—Ç—Ä–µ–Ω–¥ #–∫—Ä–∞—Å–æ—Ç–∞',
    engagement: 92,
    target: '–ñ–µ–Ω—â–∏–Ω—ã 25-35 –ª–µ—Ç'
  },
  {
    id: '2',
    type: 'email',
    title: 'Email —Ä–∞—Å—Å—ã–ª–∫–∞ - –ü–µ—Ä—Å–æ–Ω–∞–ª—å–Ω–æ–µ –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–∏–µ',
    content: '–ü—Ä–∏–≤–µ—Ç, [–ò–º—è]!\n\n–°–æ—Å–∫—É—á–∏–ª–∏—Å—å –ø–æ –≤–∞—à–∏–º –≤–∏–∑–∏—Ç–∞–º! –£ –Ω–∞—Å –µ—Å—Ç—å —Å–ø–µ—Ü–∏–∞–ª—å–Ω–æ–µ –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–∏–µ –∏–º–µ–Ω–Ω–æ –¥–ª—è –≤–∞—Å:\n\nüéÅ –°–∫–∏–¥–∫–∞ 20% –Ω–∞ –ª—é–±—É—é —É—Å–ª—É–≥–∞ –¥–æ –∫–æ–Ω—Ü–∞ –º–µ—Å—è—Ü–∞\nüåü –ë–æ–Ω—É—Å–Ω–∞—è –∫–æ–Ω—Å—É–ª—å—Ç–∞—Ü–∏—è –ø–æ —É—Ö–æ–¥—É\n\n–ó–∞–ø–∏—Å—ã–≤–∞–π—Ç–µ—Å—å –ø–æ —Å—Å—ã–ª–∫–µ –∏–ª–∏ –∑–≤–æ–Ω–∏—Ç–µ –Ω–∞–º!',
    engagement: 78,
    target: '–ù–µ–∞–∫—Ç–∏–≤–Ω—ã–µ –∫–ª–∏–µ–Ω—Ç—ã'
  },
  {
    id: '3',
    type: 'sms',
    title: 'SMS –Ω–∞–ø–æ–º–∏–Ω–∞–Ω–∏–µ',
    content: '–ü—Ä–∏–≤–µ—Ç! –ù–∞–ø–æ–º–∏–Ω–∞–µ–º –æ –∑–∞–ø–∏—Å–∏ –∑–∞–≤—Ç—Ä–∞ –≤ 15:00 –∫ –º–∞—Å—Ç–µ—Ä—É –ê–Ω–Ω–µ. –ï—Å–ª–∏ –ø–ª–∞–Ω—ã –∏–∑–º–µ–Ω–∏–ª–∏—Å—å, –ø—Ä–µ–¥—É–ø—Ä–µ–¥–∏—Ç–µ –∑–∞ 2 —á–∞—Å–∞. –î–æ –≤—Å—Ç—Ä–µ—á–∏! üíÖ',
    engagement: 95,
    target: '–ó–∞–ø–∏—Å–∞–Ω–Ω—ã–µ –∫–ª–∏–µ–Ω—Ç—ã'
  },
  {
    id: '4',
    type: 'promotion',
    title: '–ê–∫—Ü–∏—è "–ü—Ä–∏–≤–µ–¥–∏ –ø–æ–¥—Ä—É–≥—É"',
    content: '–ê–ö–¶–ò–Ø "–ü–†–ò–í–ï–î–ò –ü–û–î–†–£–ì–£" üëØ‚Äç‚ôÄÔ∏è\n\n–ü—Ä–∏–≤–µ–¥–∏—Ç–µ –ø–æ–¥—Ä—É–≥—É - –ø–æ–ª—É—á–∏—Ç–µ —Å–∫–∏–¥–∫—É 30% –Ω–∞ —Å–ª–µ–¥—É—é—â–∏–π –≤–∏–∑–∏—Ç! \n–ü–æ–¥—Ä—É–≥–∞ –ø–æ–ª—É—á–∞–µ—Ç —Å–∫–∏–¥–∫—É 20% –Ω–∞ –ø–µ—Ä–≤—ã–π –≤–∏–∑–∏—Ç.\n\n–í—ã–≥–æ–¥–Ω–æ –≤—Å–µ–º! üíù\n\n–î–µ–π—Å—Ç–≤—É–µ—Ç –¥–æ –∫–æ–Ω—Ü–∞ –º–µ—Å—è—Ü–∞.',
    engagement: 88,
    target: 'VIP –∫–ª–∏–µ–Ω—Ç—ã'
  }
];

export function AITools() {
  const [selectedRetentionFilter, setSelectedRetentionFilter] = useState('all');
  const [selectedContentType, setSelectedContentType] = useState('all');
  const [generatedContent, setGeneratedContent] = useState('');
  const [isGenerating, setIsGenerating] = useState(false);
  const [remainingGenerations, setRemainingGenerations] = useState(5);

  const getRiskColor = (risk: RetentionInsight['riskLevel']) => {
    switch (risk) {
      case 'high': return 'bg-red-100 text-red-800';
      case 'medium': return 'bg-yellow-100 text-yellow-800';
      case 'low': return 'bg-green-100 text-green-800';
      default: return 'bg-gray-100 text-gray-800';
    }
  };

  const getContentTypeIcon = (type: ContentSuggestion['type']) => {
    switch (type) {
      case 'social': return 'üì±';
      case 'email': return 'üìß';
      case 'sms': return 'üí¨';
      case 'promotion': return 'üéÅ';
      default: return 'üìÑ';
    }
  };

  const filteredRetentionInsights = retentionInsights.filter(insight => {
    if (selectedRetentionFilter === 'all') return true;
    return insight.riskLevel === selectedRetentionFilter;
  });

  const filteredContentSuggestions = contentSuggestions.filter(suggestion => {
    if (selectedContentType === 'all') return true;
    return suggestion.type === selectedContentType;
  });

  const handleGenerateContent = async () => {
    if (remainingGenerations <= 0) return;
    
    setIsGenerating(true);
    
    // Simulate AI content generation
    setTimeout(() => {
      const prompts = [
        "üåü –ù–û–í–ò–ù–ö–ê –í –ù–ê–®–ï–ú –°–ê–õ–û–ù–ï! üåü\n\n–í—Å—Ç—Ä–µ—á–∞–π—Ç–µ —Ä–µ–≤–æ–ª—é—Ü–∏–æ–Ω–Ω—É—é –ø—Ä–æ—Ü–µ–¥—É—Ä—É –≤–æ—Å—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∏—è –≤–æ–ª–æ—Å —Å –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ–º –∫–µ—Ä–∞—Ç–∏–Ω–∞ –ø—Ä–µ–º–∏—É–º-–∫–ª–∞—Å—Å–∞!\n\n‚ú® –†–µ–∑—É–ª—å—Ç–∞—Ç –ø–æ—Å–ª–µ –ø–µ—Ä–≤–æ–π –ø—Ä–æ—Ü–µ–¥—É—Ä—ã\nüïê –≠–∫–æ–Ω–æ–º–∏—è –≤—Ä–µ–º–µ–Ω–∏ –Ω–∞ —É–∫–ª–∞–¥–∫–µ\nüí´ –ó–¥–æ—Ä–æ–≤—ã–µ –∏ –±–ª–µ—Å—Ç—è—â–∏–µ –≤–æ–ª–æ—Å—ã\n\n–ó–∞–ø–∏—Å—ã–≤–∞–π—Ç–µ—Å—å –ø—Ä—è–º–æ —Å–µ–π—á–∞—Å! –ö–æ–ª–∏—á–µ—Å—Ç–≤–æ –º–µ—Å—Ç –æ–≥—Ä–∞–Ω–∏—á–µ–Ω–æ.\n\n#—Å–∞–ª–æ–Ω–∫—Ä–∞—Å–æ—Ç—ã #–∫–µ—Ä–∞—Ç–∏–Ω #–≤–æ–ª–æ—Å—ã",
        
        "üíÖ –ú–ê–ù–ò–ö–Æ–†-–ú–ê–†–ê–§–û–ù –ù–ê –í–´–•–û–î–ù–´–•! üíÖ\n\n–°—É–±–±–æ—Ç–∞ –∏ –≤–æ—Å–∫—Ä–µ—Å–µ–Ω—å–µ - –¥–Ω–∏ –∏–¥–µ–∞–ª—å–Ω–æ–≥–æ –º–∞–Ω–∏–∫—é—Ä–∞!\n\nüéØ –≠–∫—Å–ø—Ä–µ—Å—Å-–º–∞–Ω–∏–∫—é—Ä –∑–∞ 45 –º–∏–Ω—É—Ç\nüåà –ù–æ–≤–∞—è –∫–æ–ª–ª–µ–∫—Ü–∏—è –≥–µ–ª—å-–ª–∞–∫–æ–≤\nüíé –î–∏–∑–∞–π–Ω –æ—Ç —Ç–æ–ø-–º–∞—Å—Ç–µ—Ä–æ–≤\n\n–ë—Ä–æ–Ω–∏—Ä—É–π—Ç–µ –≤—Ä–µ–º—è –∑–∞—Ä–∞–Ω–µ–µ!\n\n#–º–∞–Ω–∏–∫—é—Ä #–≤—ã—Ö–æ–¥–Ω—ã–µ #–∫—Ä–∞—Å–æ—Ç–∞",
        
        "üéâ –î–ï–ù–¨ –†–û–ñ–î–ï–ù–ò–Ø –°–ê–õ–û–ù–ê - –ú–ï–°–Ø–¶ –ü–û–î–ê–†–ö–û–í! üéâ\n\n–í–µ—Å—å –∏—é–ª—å –¥–∞—Ä–∏–º —Å–∫–∏–¥–∫–∏ –∏ —Å—é—Ä–ø—Ä–∏–∑—ã:\n\nüìÖ –ü–æ–Ω–µ–¥–µ–ª—å–Ω–∏–∫ - —Å–∫–∏–¥–∫–∞ 20% –Ω–∞ —Å—Ç—Ä–∏–∂–∫–∏\nüíÜ‚Äç‚ôÄÔ∏è –°—Ä–µ–¥–∞ - –º–∞—Å—Å–∞–∂ –ª–∏—Ü–∞ –≤ –ø–æ–¥–∞—Ä–æ–∫\nüíÖ –ü—è—Ç–Ω–∏—Ü–∞ - –¥–∏–∑–∞–π–Ω –Ω–æ–≥—Ç–µ–π –±–µ—Å–ø–ª–∞—Ç–Ω–æ\n\n–ü—Ä–∏—Å–æ–µ–¥–∏–Ω—è–π—Ç–µ—Å—å –∫ –ø—Ä–∞–∑–¥–Ω–∏–∫—É –∫—Ä–∞—Å–æ—Ç—ã!"
      ];
      
      const randomPrompt = prompts[Math.floor(Math.random() * prompts.length)];
      setGeneratedContent(randomPrompt);
      setRemainingGenerations(prev => prev - 1);
      setIsGenerating(false);
    }, 2000);
  };

  return (
    <div className="space-y-6">
      {/* Header */}
      <div className="flex flex-col sm:flex-row justify-between items-start sm:items-center gap-4">
        <div>
          <h2 className="text-xl md:text-2xl font-semibold text-gray-900">AI –ò–Ω—Å—Ç—Ä—É–º–µ–Ω—Ç—ã</h2>
          <p className="text-gray-500 mt-1 text-sm">–ò—Å–∫—É—Å—Å—Ç–≤–µ–Ω–Ω—ã–π –∏–Ω—Ç–µ–ª–ª–µ–∫—Ç –¥–ª—è —Ä–æ—Å—Ç–∞ –±–∏–∑–Ω–µ—Å–∞</p>
        </div>
        
        <div className="flex items-center gap-2">
          <Badge variant="outline" className="flex items-center gap-1 text-xs">
            <Sparkles className="w-3 h-3" />
            AI Premium
          </Badge>
        </div>
      </div>

      <Tabs defaultValue="retention" className="space-y-6">
        <TabsList className="grid w-full grid-cols-2">
          <TabsTrigger value="retention" className="flex items-center gap-2 text-xs md:text-sm">
            <TrendingUp className="w-3 h-3 md:w-4 md:h-4" />
            <span className="hidden sm:inline">AI Retention</span>
            <span className="sm:hidden">Retention</span>
          </TabsTrigger>
          <TabsTrigger value="content" className="flex items-center gap-2 text-xs md:text-sm">
            <FileText className="w-3 h-3 md:w-4 md:h-4" />
            <span className="hidden sm:inline">AI –ö–æ–ø–∏—Ä–∞–π—Ç–µ—Ä</span>
            <span className="sm:hidden">–ö–æ–Ω—Ç–µ–Ω—Ç</span>
          </TabsTrigger>
        </TabsList>

        {/* AI Retention Tab */}
        <TabsContent value="retention" className="space-y-6">
          <div className="grid grid-cols-1 md:grid-cols-3 gap-4 md:gap-6">
            {/* Summary Cards */}
            <Card>
              <CardContent className="p-4 md:p-6">
                <div className="flex items-center gap-3">
                  <div className="w-10 h-10 md:w-12 md:h-12 bg-red-100 rounded-full flex items-center justify-center">
                    <Target className="w-5 h-5 md:w-6 md:h-6 text-red-600" />
                  </div>
                  <div>
                    <p className="text-xl md:text-2xl font-semibold text-gray-900">3</p>
                    <p className="text-xs md:text-sm text-gray-500">–ö–ª–∏–µ–Ω—Ç—ã –≤ –∑–æ–Ω–µ —Ä–∏—Å–∫–∞</p>
                  </div>
                </div>
              </CardContent>
            </Card>

            <Card>
              <CardContent className="p-4 md:p-6">
                <div className="flex items-center gap-3">
                  <div className="w-10 h-10 md:w-12 md:h-12 bg-green-100 rounded-full flex items-center justify-center">
                    <Users className="w-5 h-5 md:w-6 md:h-6 text-green-600" />
                  </div>
                  <div>
                    <p className="text-xl md:text-2xl font-semibold text-gray-900">85%</p>
                    <p className="text-xs md:text-sm text-gray-500">–¢–æ—á–Ω–æ—Å—Ç—å –ø—Ä–æ–≥–Ω–æ–∑–∞</p>
                  </div>
                </div>
              </CardContent>
            </Card>

            <Card>
              <CardContent className="p-4 md:p-6">
                <div className="flex items-center gap-3">
                  <div className="w-10 h-10 md:w-12 md:h-12 bg-blue-100 rounded-full flex items-center justify-center">
                    <Brain className="w-5 h-5 md:w-6 md:h-6 text-blue-600" />
                  </div>
                  <div>
                    <p className="text-xl md:text-2xl font-semibold text-gray-900">12</p>
                    <p className="text-xs md:text-sm text-gray-500">–ö–ª–∏–µ–Ω—Ç–æ–≤ –≤–µ—Ä–Ω—É–ª–æ—Å—å</p>
                  </div>
                </div>
              </CardContent>
            </Card>
          </div>

          {/* Filters */}
          <div className="flex gap-4">
            <Select value={selectedRetentionFilter} onValueChange={setSelectedRetentionFilter}>
              <SelectTrigger className="w-full sm:w-48">
                <SelectValue placeholder="–£—Ä–æ–≤–µ–Ω—å —Ä–∏—Å–∫–∞" />
              </SelectTrigger>
              <SelectContent>
                <SelectItem value="all">–í—Å–µ –∫–ª–∏–µ–Ω—Ç—ã</SelectItem>
                <SelectItem value="high">–í—ã—Å–æ–∫–∏–π —Ä–∏—Å–∫</SelectItem>
                <SelectItem value="medium">–°—Ä–µ–¥–Ω–∏–π —Ä–∏—Å–∫</SelectItem>
                <SelectItem value="low">–ù–∏–∑–∫–∏–π —Ä–∏—Å–∫</SelectItem>
              </SelectContent>
            </Select>
          </div>

          {/* Retention Insights */}
          <div className="space-y-4">
            {filteredRetentionInsights.map(insight => (
              <Card key={insight.id} className="hover:shadow-md transition-shadow">
                <CardContent className="p-6">
                  <div className="flex items-start justify-between">
                    <div className="flex-1">
                      <div className="flex items-center gap-3 mb-3">
                        <h3 className="font-semibold text-gray-900">{insight.clientName}</h3>
                        <Badge className={getRiskColor(insight.riskLevel)}>
                          {insight.riskLevel === 'high' ? '–í—ã—Å–æ–∫–∏–π —Ä–∏—Å–∫' :
                           insight.riskLevel === 'medium' ? '–°—Ä–µ–¥–Ω–∏–π —Ä–∏—Å–∫' : '–ù–∏–∑–∫–∏–π —Ä–∏—Å–∫'}
                        </Badge>
                      </div>
                      
                      <div className="space-y-2">
                        <p className="text-sm text-gray-600">
                          <strong>–ü–æ—Å–ª–µ–¥–Ω–∏–π –≤–∏–∑–∏—Ç:</strong> {new Date(insight.lastVisit).toLocaleDateString('ru-RU')}
                        </p>
                        <p className="text-sm text-gray-700">{insight.recommendation}</p>
                        
                        <div className="flex items-center gap-2 mt-3">
                          <span className="text-xs text-gray-500">–í–µ—Ä–æ—è—Ç–Ω–æ—Å—Ç—å —É—Ö–æ–¥–∞:</span>
                          <Progress value={insight.probability} className="flex-1 max-w-32" />
                          <span className="text-xs font-medium">{insight.probability}%</span>
                        </div>
                      </div>
                    </div>
                    
                    <div className="flex gap-2 ml-4">
                      <Button size="sm" variant="outline">
                        <MessageSquare className="w-4 h-4 mr-1" />
                        –ù–∞–ø–∏—Å–∞—Ç—å
                      </Button>
                      <Button size="sm">
                        –ü—Ä–∏–º–µ–Ω–∏—Ç—å
                      </Button>
                    </div>
                  </div>
                </CardContent>
              </Card>
            ))}
          </div>
        </TabsContent>

        {/* AI Copywriter Tab */}
        <TabsContent value="content" className="space-y-6">
          {/* Usage Counter */}
          <Card>
            <CardContent className="p-6">
              <div className="flex items-center justify-between">
                <div className="flex items-center gap-3">
                  <div className="w-12 h-12 bg-purple-100 rounded-full flex items-center justify-center">
                    <Wand2 className="w-6 h-6 text-purple-600" />
                  </div>
                  <div>
                    <h3 className="font-semibold text-gray-900">AI –ö–æ–ø–∏—Ä–∞–π—Ç–µ—Ä</h3>
                    <p className="text-sm text-gray-500">–ì–µ–Ω–µ—Ä–∞—Ü–∏—è –∫–æ–Ω—Ç–µ–Ω—Ç–∞ –¥–ª—è –º–∞—Ä–∫–µ—Ç–∏–Ω–≥–∞</p>
                  </div>
                </div>
                
                <div className="text-right">
                  <p className="text-sm text-gray-500">–û—Å—Ç–∞–ª–æ—Å—å –≥–µ–Ω–µ—Ä–∞—Ü–∏–π –≤ —ç—Ç–æ–º –º–µ—Å—è—Ü–µ:</p>
                  <p className="text-xl font-semibold text-gray-900">{remainingGenerations}/5</p>
                </div>
              </div>
            </CardContent>
          </Card>

          {/* Content Generator */}
          <Card>
            <CardHeader>
              <CardTitle>–ì–µ–Ω–µ—Ä–∞—Ç–æ—Ä –∫–æ–Ω—Ç–µ–Ω—Ç–∞</CardTitle>
            </CardHeader>
            <CardContent className="space-y-4">
              <div className="flex gap-4">
                <Select>
                  <SelectTrigger className="w-48">
                    <SelectValue placeholder="–¢–∏–ø –∫–æ–Ω—Ç–µ–Ω—Ç–∞" />
                  </SelectTrigger>
                  <SelectContent>
                    <SelectItem value="social">–°–æ—Ü–∏–∞–ª—å–Ω—ã–µ —Å–µ—Ç–∏</SelectItem>
                    <SelectItem value="email">Email —Ä–∞—Å—Å—ã–ª–∫–∞</SelectItem>
                    <SelectItem value="sms">SMS —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è</SelectItem>
                    <SelectItem value="promotion">–ê–∫—Ü–∏–∏ –∏ –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–∏—è</SelectItem>
                  </SelectContent>
                </Select>
                
                <Select>
                  <SelectTrigger className="w-48">
                    <SelectValue placeholder="–¶–µ–ª–µ–≤–∞—è –∞—É–¥–∏—Ç–æ—Ä–∏—è" />
                  </SelectTrigger>
                  <SelectContent>
                    <SelectItem value="new">–ù–æ–≤—ã–µ –∫–ª–∏–µ–Ω—Ç—ã</SelectItem>
                    <SelectItem value="regular">–ü–æ—Å—Ç–æ—è–Ω–Ω—ã–µ –∫–ª–∏–µ–Ω—Ç—ã</SelectItem>
                    <SelectItem value="vip">VIP –∫–ª–∏–µ–Ω—Ç—ã</SelectItem>
                    <SelectItem value="inactive">–ù–µ–∞–∫—Ç–∏–≤–Ω—ã–µ –∫–ª–∏–µ–Ω—Ç—ã</SelectItem>
                  </SelectContent>
                </Select>
                
                <Button 
                  onClick={handleGenerateContent}
                  disabled={isGenerating || remainingGenerations <= 0}
                  className="flex items-center gap-2"
                >
                  {isGenerating ? (
                    <>
                      <div className="animate-spin rounded-full h-4 w-4 border-b-2 border-white"></div>
                      –ì–µ–Ω–µ—Ä–∏—Ä—É—é...
                    </>
                  ) : (
                    <>
                      <Sparkles className="w-4 h-4" />
                      –ì–µ–Ω–µ—Ä–∏—Ä–æ–≤–∞—Ç—å
                    </>
                  )}
                </Button>
              </div>
              
              {generatedContent && (
                <div className="border rounded-lg p-4 bg-gray-50">
                  <h4 className="font-medium mb-2">–°–≥–µ–Ω–µ—Ä–∏—Ä–æ–≤–∞–Ω–Ω—ã–π –∫–æ–Ω—Ç–µ–Ω—Ç:</h4>
                  <Textarea 
                    value={generatedContent}
                    onChange={(e) => setGeneratedContent(e.target.value)}
                    rows={8}
                    className="bg-white"
                  />
                  <div className="flex justify-end gap-2 mt-3">
                    <Button variant="outline" size="sm">
                      –ö–æ–ø–∏—Ä–æ–≤–∞—Ç—å
                    </Button>
                    <Button size="sm">
                      –ò—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å
                    </Button>
                  </div>
                </div>
              )}
            </CardContent>
          </Card>

          {/* Content Suggestions Filter */}
          <div className="flex gap-4">
            <Select value={selectedContentType} onValueChange={setSelectedContentType}>
              <SelectTrigger className="w-48">
                <SelectValue placeholder="–¢–∏–ø –∫–æ–Ω—Ç–µ–Ω—Ç–∞" />
              </SelectTrigger>
              <SelectContent>
                <SelectItem value="all">–í—Å–µ —Ç–∏–ø—ã</SelectItem>
                <SelectItem value="social">–°–æ—Ü–∏–∞–ª—å–Ω—ã–µ —Å–µ—Ç–∏</SelectItem>
                <SelectItem value="email">Email</SelectItem>
                <SelectItem value="sms">SMS</SelectItem>
                <SelectItem value="promotion">–ê–∫—Ü–∏–∏</SelectItem>
              </SelectContent>
            </Select>
          </div>

          {/* Content Suggestions */}
          <div className="grid gap-4">
            {filteredContentSuggestions.map(suggestion => (
              <Card key={suggestion.id} className="hover:shadow-md transition-shadow">
                <CardContent className="p-6">
                  <div className="flex items-start justify-between">
                    <div className="flex-1">
                      <div className="flex items-center gap-3 mb-3">
                        <span className="text-2xl">{getContentTypeIcon(suggestion.type)}</span>
                        <div>
                          <h3 className="font-semibold text-gray-900">{suggestion.title}</h3>
                          <p className="text-sm text-gray-500">–¶–µ–ª–µ–≤–∞—è –∞—É–¥–∏—Ç–æ—Ä–∏—è: {suggestion.target}</p>
                        </div>
                        <Badge variant="outline" className="ml-auto">
                          –≠—Ñ—Ñ–µ–∫—Ç–∏–≤–Ω–æ—Å—Ç—å: {suggestion.engagement}%
                        </Badge>
                      </div>
                      
                      <div className="bg-gray-50 rounded-lg p-4 mb-4">
                        <pre className="whitespace-pre-wrap text-sm text-gray-700 font-sans">
                          {suggestion.content}
                        </pre>
                      </div>
                    </div>
                  </div>
                  
                  <div className="flex justify-end gap-2">
                    <Button variant="outline" size="sm">
                      –†–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞—Ç—å
                    </Button>
                    <Button size="sm">
                      –ò—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å
                    </Button>
                  </div>
                </CardContent>
              </Card>
            ))}
          </div>
        </TabsContent>
      </Tabs>
    </div>
  );
}